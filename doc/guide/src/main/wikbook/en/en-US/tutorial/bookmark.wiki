The bookmark application shows an action controller example, actions are method annotated by the
##@Action## annotation. Unlike views, actions are only called when an action url is processed by the portal, whereas
a view controller method can be invoked any time by the portal.

The role of an action controller is to process actions parameters. Each parameter of an action controller method is mapped
to the incoming request processed by the portal, such parameters can be encoded directly in the URL or be present in the
form that triggers the action.

{{code href=examples/tutorial/bookmark/templates/index.gtmpl/}}

In our example, we use a form which contains the two input parameters ##name## and ##url##. In order to produce an action
url we use the same syntax shown for view url ##@{add()}## but this time we don't need to set any parameter, instead the
form parameters will be used when the form is submitted. However this is not formal and instead we could have
url parameters such as ##@{add(name = 'bing', url = 'http://www.bing.com')}##, such syntax is valid specially
when it is used in a simple link, obviously there is the possibility to mix form and action parameters.

When the url is processed, the following action controller method will be invoked:

{{java}}
{@include examples.tutorial.bookmark.Bookmark#add(java.lang.String,java.lang.String)}
{{/java}}

The method process the ##name## and ##url## parameters and add them to the ##bookmarks## map. After this the portal
will proceed to the page rendering phase and will call the ##index()## method to refresh the application.
